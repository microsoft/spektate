trigger:
  - master

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "10.x"
    displayName: "Install Node.js"

  - script: |
      yarn install
    workingDirectory: "./"
    displayName: "yarn"

  - script: |
      yarn lint
    workingDirectory: "./"
    displayName: "tslint"

  - script: |
      yarn build
    workingDirectory: "./"
    displayName: "Build"

  - task: Docker@2
    inputs:
      containerRegistry: "spektateacrconnection"
      repository: "spektate"
      command: "buildAndPush"
      Dockerfile: "**/Dockerfile"
      tags: "spektate-$(Build.SourceBranchName)-$(Build.BuildId)"
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: Build docker image for front end

  - script: |
      yarn install
    workingDirectory: "./backend"
    displayName: "backend - yarn"

  - script: |
      yarn lint
    workingDirectory: "./backend"
    displayName: "backend - tslint"

  - script: |
      yarn build
    workingDirectory: "./backend"
    displayName: "backend - Build"

  - task: Docker@2
    inputs:
      containerRegistry: "spektateacrconnection"
      repository: "spektate"
      command: "buildAndPush"
      Dockerfile: "**/backend/Dockerfile"
      tags: "spektate-backend-$(Build.SourceBranchName)-$(Build.BuildId)"
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: Build docker image for back end

  - script: |
      cd packages/spektate
      yarn
      yarn build
      yarn test
    displayName: "package build and test"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/**/coverage"
